Written by Gutu Ahmed SE I Spring '23 in response to:
The two questions go as follows:
      
1. name as many of the SDLC phases as you can (in order is preferred but not necessary) and describe        each listed phase as much as you can.

Question 1: 
Requirements Gathering - This initial part of the SDLC involves the collecting and organizing of information from a customer in order to identify all the necessary components needed in the developing of a product for that customer. This includes the listing of requirements that are mandatory or optional , functional or nonfunctional, High-level or Low-level. These are usually consolidated into a file for the customer and dev team both to look at. The purpose of identifying all these things is to determine what the customer's needs for the product actually are. This is done through activities such as interviews or questionnaires. 
Design Overview - In this part of the SDLC, The requirements from the previous requirements analysis are taken into consideration. Using the list of requirements as input a design for how components and systems interact with each other in the product is made. This allows for the identifying of High-level details in the design such as the architectural design of the product all the way down to the individual data models and classes in the detailed design. Diagrams and models such as UML & ERD for the design overview of the product are usually made to help with the visualization of the design.  Design overview is used as a tool to plan for the implementation of the product. The purpose of this phase is to attempt to set up the product in a way that allows it to be robust and efficient in every way the customer needs it to be. 
Implementation - In this part of the SDLC the actual coding of software begins. Utilizing documents from previous phases developers in this phase create source code that implements the design of the product. Usually during this process, the design of the product will be updated as issues or better solutions present themselves. This phase also involves the setting up of databases and reference tools such as source control potentially needed to bring the product together. Documentation of the product is also very important to remember to do in this phase. The purpose of implementation is to implement a working solution for the customer.
Testing - In this phase of the SDLC the testing of systems and components in the product is carried out with the purpose of ensuring the quality required by the customer. It is possible that some testing was done in the lead up to this phase, possibly in the implementation. This phase is meant to be very thorough in attempting to catch unexpected bugs and defects. User testing can also be included in this phase as some issues can come up from the user point of view. The purpose of the testing phase is to provide quality assurance to the customer, ensuring that all requirements have been met in the product.
Deploying - In this phase of the SDLC the product is actually deployed to the production environment. This phase, while seemingly simple in theory, can become a difficult process without proper planning. The use of a staging environment before the pushing to production can be crucial in identifying hiccups that may occur. There are different methods of deployment such as a dark release which involves a set time that changes will be pushed to production. In any given company the planning of a deployment of a product may involve many different departments working together.
Maintaining - This phase of the SDLC is the last phase. This phase involves the maintaining of the product for the duration of its usage lifespan. This will involve the addressing of defects that come up from usage of the product. This is mostly done with some ticket-based system. Maintenance of a product after it's been deployed is the most expensive part of the development of the product. 
